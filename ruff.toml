line-length = 200
show-fixes = true
target-version = "py38"

[format]
docstring-code-format = true
docstring-code-line-length = 60

[lint]
# rules: https://docs.astral.sh/ruff/rules/
select = [
    "E", # pycodestyle error
    "W", # pycodestyle warning
    "F", # pyflakes
    "UP", # pyupgrade
    "D", # pydocstyle
    "I", # isort
    "C90", # mccabe
    "N", # pep8-naming
    "ANN", # flake8-annotations
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM", # flake8-errmsg
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PL", # Pylint
    "PERF", # Perflint
    "RUF", # Ruff-specific rules
]
ignore = [
    "UP009", # UTF-8 encoding declaration is unnecessary
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "D415",
    "B008", # Do not perform function call in argument defaults (not fastapi style)
    "ANN101", # self arguments have type annotations, deprecated
    "ANN102", # cls arguments have type annotations, deprecated
    "RUF001", # String contains ambiguous unicode character (chinese char)
    "RUF002", # Docstring contains ambiguous unicode character (chinese comment)
    "RUF003", # Comment contains ambiguous unicode character (chinese comment)
]

[lint.mccabe]
max-complexity = 15

[lint.per-file-ignores]
"**/app/tests/*" = ["D", "S", "T20", "ANN"] # Don't check this rules in unittest
"__init__.py" = ["F401"] # Allow unused import in __init__.py

[lint.pydocstyle]
convention = "google"

[lint.pylint]
max-args = 20 # some api callbacks need lots of args